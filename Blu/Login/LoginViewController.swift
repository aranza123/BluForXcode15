//
//  LoginViewController.swift
//  Blu
//
//  Created by Aranza Manriquez Alonso on 25/12/24.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class LoginViewController: UIViewController {

    // MARK: - Public properties -

    var presenter: LoginPresenterInterface!

    // MARK: - Lifecycle -
    @IBOutlet weak var userTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    @IBOutlet weak var activityIndicator: UIActivityIndicatorView!
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        activityIndicator.isHidden = true
        setDoneToolBar(textField: userTextField)
        setDoneToolBar(textField: passwordTextField)
    }
    
    func setDoneToolBar(textField: UITextField) {
        let doneToolBar: UIToolbar = UIToolbar()
            doneToolBar.items = [
                UIBarButtonItem(barButtonSystemItem: UIBarButtonItem.SystemItem.flexibleSpace, target: self, action: nil),
                UIBarButtonItem(title: "OK", style: UIBarButtonItem.Style.plain, target: self, action: #selector(dismissKeyboard))
            ]
        doneToolBar.sizeToFit()
        textField.inputAccessoryView = doneToolBar
    }
    
    @objc func dismissKeyboard() {
        view.endEditing(true)
    }
    
    func showActivity(show: Bool) {
        if show {
            activityIndicator.startAnimating()
            view.isUserInteractionEnabled = false
            activityIndicator.isHidden = false
        } else {
            activityIndicator.stopAnimating()
            activityIndicator.hidesWhenStopped = true
            activityIndicator.isHidden = true
            view.isUserInteractionEnabled = true
        }
    }
    
    @IBAction func accessButton(_ sender: Any) {
        let user = userTextField.text
        let password = passwordTextField.text
        
        guard user != "" else {
            self.showToast(message: "Ingresa un email", font: .systemFont(ofSize: 12.0))
            return
        }
        
        guard password != "" else {
            self.showToast(message: "Ingresa una contrase√±a", font: .systemFont(ofSize: 12.0))
            return
        }
        showActivity(show: true)
        let request = LoginRequest(email: user ?? "", password: password ?? "")
        presenter.performLogin(request: request)
    }
    
}

// MARK: - Extensions -

extension LoginViewController: LoginViewInterface {
    func successfulLogin(user: LoginResponse) {
        showActivity(show: false)
        if user.token != nil {
            UserDefaults.standard.set("true", forKey: ATConstants.isLogged)
            presenter.goImages()
        } else {
            showToast(message: "El usuario es incorrecto", font: .systemFont(ofSize: 12.0))
        }
        
    }
    
    func failureLogin(messageError: String) {
        showActivity(show: false)
        showToast(message: messageError
                  , font: .systemFont(ofSize: 12.0))
    }
    
}

extension UIViewController {
    
    func showToast(message : String, font: UIFont) {
        let toastLabel = UILabel(frame: CGRect(x: self.view.frame.size.width/2 - 75, y: 50, width: 150, height: 35))
        toastLabel.backgroundColor = UIColor.black.withAlphaComponent(0.6)
        toastLabel.textColor = UIColor.white
        toastLabel.font = font
        toastLabel.textAlignment = .center;
        toastLabel.text = message
        toastLabel.alpha = 1.0
        toastLabel.layer.cornerRadius = 10;
        toastLabel.clipsToBounds  =  true
        self.view.addSubview(toastLabel)
        UIView.animate(withDuration: 4.0, delay: 0.1, options: .curveEaseOut, animations: {
            toastLabel.alpha = 0.0
        }, completion: {(isCompleted) in
            toastLabel.removeFromSuperview()
        })
    }
}
