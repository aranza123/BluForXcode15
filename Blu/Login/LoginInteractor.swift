//
//  LoginInteractor.swift
//  Blu
//
//  Created by Aranza Manriquez Alonso on 25/12/24.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import Alamofire

final class LoginInteractor {
    var queue: OperationQueue
    
    init() {
        self.queue = OperationQueue()
        self.queue.maxConcurrentOperationCount = 2
    }
}

// MARK: - Extensions -

extension LoginInteractor: LoginInteractorInterface {
    func executeLogin(onSuccess successCallBack: ((LoginResponse) -> Void)?, onFailure failureCallBack: ((String) -> Void)?, body: LoginRequest) {
        self.queue.addOperation (APICallManager(url: ServicesName.login, method: .post, body: try? APICallManager.jsonEncorderBody(body), onSuccess: { (response) in
            do {
                let jsonDecoder = JSONDecoder()
                jsonDecoder.keyDecodingStrategy = .convertFromSnakeCase
                
                let response = try jsonDecoder.decode(LoginResponse.self, from: response)
                successCallBack?(response)
            } catch let error {
                failureCallBack?(error.localizedDescription)
            }
        }, onFailure: { (errorMessage) in
            failureCallBack?(errorMessage)
        }))
    }
}
